{"version":3,"sources":["components/Form.js","components/TrendingMovie.js","components/Main.js","components/Error.js","components/Movie.js","components/MovieResults.js","components/Actor.js","components/Router.js","serviceWorker.js","index.js","App.js"],"names":["Form","state","searchTerm","handleChange","event","_this","setState","Object","defineProperty","target","name","value","handleSubmit","e","preventDefault","trim","props","history","push","concat","react_default","a","createElement","onSubmit","this","type","onChange","placeholder","Component","withRouter","TrendingMovie","trending","undefined","loading","_this2","axios","get","then","res","data","results","className","Fragment","map","movie","Link","to","id","key","alt","original_title","src","poster_path","Main","components_Form","components_TrendingMovie","Error","Movie","singleMovie","error","match","params","movieId","catch","console","log","components_Error","backdrop_path","style","background","release_date","substring","vote_average","react_star_rating_component_default","editing","starCount","emptyStarColor","genres","genre","overview","credits","cast","length","slice","filter","img","profile_path","character","React","MovieResults","movies","page","getMovie","term","performSearch","performSearchMore","objectSpread","toConsumableArray","loadMore","prevState","prevProps","total_pages","onClick","Actor","actor","sortedBy","ellipsis","string","actorId","_this3","birthday","biography","movie_credits","sort","b","Date","Router","HashRouter","Switch","Route","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c7a8ed65.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport { withRouter } from 'react-router-dom';\n\nclass Form extends Component {\n  state = {\n    searchTerm: ''\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.searchTerm.trim() === '') {\n      return false;\n    }\n    this.props.history.push(`/search/${this.state.searchTerm}`);\n    this.setState({\n      searchTerm: ''\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"searchTerm\"\n          value={this.state.searchTerm}\n          onChange={this.handleChange}\n          placeholder=\"Search movie\"\n        />\n      </form>\n    );\n  }\n}\n\nexport default withRouter(Form);\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { Link } from 'react-router-dom';\n\nclass TrendingMovie extends Component {\n  state = {\n    trending: undefined,\n    loading: true\n  };\n  componentDidMount() {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/trending/movie/day?api_key=b0994f6029743a2f030a3fed34413897`\n      )\n      .then(res => {\n        const trending = res.data.results;\n        this.setState({ trending, loading: false });\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"trending\">\n        {this.state.loading ? (\n          <div className=\"loader\" />\n        ) : (\n          <React.Fragment>\n            <h3>Trending </h3>\n            <div className=\"movie-list\">\n              {this.state.trending.map(movie => (\n                <Link to={`/movie/${movie.id}`} key={movie.id}>\n                  <div>\n                    <img\n                      alt={movie.original_title}\n                      src={`http://image.tmdb.org/t/p/w342/${\n                        movie.poster_path\n                      }`}\n                      className=\"movie-img\"\n                    />\n                    <p className=\"movie-title\">{movie.original_title}</p>\n                  </div>\n                </Link>\n              ))}\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default TrendingMovie;\n","import React from 'react';\nimport Form from './Form';\nimport TrendingMovie from './TrendingMovie';\nimport '../App.css';\n\nconst Main = () => {\n  return (\n    <div className=\"wrapper\">\n      <Form />\n      <TrendingMovie />\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Error = () => {\n  return (\n    <div className=\"wrapper\">\n      <p className=\"center\">\n        Error :( Get back to <Link to={'/'}>homepage</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default Error;\n","import React from 'react';\nimport axios from 'axios';\nimport StarRatingComponent from 'react-star-rating-component';\nimport Error from './Error';\nimport { Link } from 'react-router-dom';\n\nclass Movie extends React.Component {\n  state = {\n    singleMovie: undefined,\n    error: false,\n    loading: true\n  };\n\n  componentDidMount() {\n    const id = this.props.match.params.movieId;\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/${id}?api_key=b0994f6029743a2f030a3fed34413897&language=en-US&append_to_response=credits`\n      )\n      .then(res => {\n        const singleMovie = res.data;\n        this.setState({ singleMovie, loading: false });\n      })\n      .catch(error => {\n        console.log('error: ' + error);\n        this.setState({ error: true });\n      });\n  }\n\n  render() {\n    if (this.state.error) {\n      return <Error />;\n    }\n\n    return (\n      <div className=\"singleMovie\">\n        {this.state.loading ? (\n          <div className=\"loader\" />\n        ) : (\n          <React.Fragment>\n            {this.state.singleMovie.backdrop_path !== null && (\n              <div\n                className=\"bg\"\n                style={{\n                  background: `linear-gradient(rgba(0, 0, 0, 0), rgba(27, 33, 47, 0.9)), url(http://image.tmdb.org/t/p/w1280/${\n                    this.state.singleMovie.backdrop_path\n                  }) top center / cover no-repeat`\n                }}\n              />\n            )}\n            <div className=\"movie\">\n              <div className=\"poster\">\n                <img\n                  src={`http://image.tmdb.org/t/p/w185/${\n                    this.state.singleMovie.poster_path\n                  }`}\n                  className=\"poster-img\"\n                  alt={this.state.singleMovie.original_title}\n                />\n              </div>\n              <div className=\"movie-details\">\n                <p className=\"movie-details-date\">\n                  {this.state.singleMovie.release_date.substring(0, 4)}\n                </p>\n                <h1>{this.state.singleMovie.original_title}</h1>\n\n                {this.state.singleMovie.vote_average !== 0 && (\n                  <div className=\"star\">\n                    <StarRatingComponent\n                      name=\"rate2\"\n                      editing={false}\n                      starCount={10}\n                      value={this.state.singleMovie.vote_average}\n                      emptyStarColor={'000'}\n                    />\n                    <span>{this.state.singleMovie.vote_average} / 10</span>\n                  </div>\n                )}\n                <div>\n                  <ul className=\"genres\">\n                    {this.state.singleMovie.genres.map(genre => (\n                      <li>{genre.name}</li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n              <div className=\"overview\">\n                <h3>Overview</h3>\n                <p>{this.state.singleMovie.overview}</p>\n              </div>\n              {this.state.singleMovie.credits.cast.length !== 0 && (\n                <div className=\"cast\">\n                  <h3>Cast</h3>\n                  <ul className=\"cast_list\">\n                    {this.state.singleMovie.credits.cast\n                      .slice(0, 10)\n                      .filter(img => img.profile_path)\n                      .map(cast => {\n                        return (\n                          <Link to={`/actor/${cast.id}`} key={cast.id}>\n                            <li key={cast.name}>\n                              <img\n                                className=\"cast_img\"\n                                src={`http://image.tmdb.org/t/p/w185/${\n                                  cast.profile_path\n                                }`}\n                                alt={cast.original_title}\n                              />\n                              <p className=\"sub-title\">{cast.character}</p>\n                              <p>{cast.name}</p>\n                            </li>\n                          </Link>\n                        );\n                      })}\n                  </ul>\n                </div>\n              )}\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Movie;\n","import React from 'react';\nimport axios from 'axios';\nimport Form from './Form';\n\nimport { Link } from 'react-router-dom';\n\nclass MovieResults extends React.Component {\n  state = {\n    movies: {},\n    page: 1,\n    loading: true\n  };\n\n  getMovie = () => {\n    const term = this.props.match.params.term;\n    return axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=b0994f6029743a2f030a3fed34413897&language=en-US&query=${term}&page=${\n        this.state.page\n      }&include_adult=false`\n    );\n  };\n\n  performSearch = () => {\n    this.getMovie().then(res => {\n      const movies = res.data;\n      this.setState({\n        movies,\n        loading: false\n      });\n    });\n  };\n\n  performSearchMore = () => {\n    this.getMovie().then(res => {\n      const movies = res.data;\n      this.setState({\n        movies: {\n          ...movies,\n          results: [...this.state.movies.results, ...movies.results]\n        },\n        loading: false\n      });\n    });\n  };\n\n  loadMore = () => {\n    this.setState(\n      (prevState, props) => ({\n        page: prevState.page + 1\n      }),\n      () => this.performSearchMore()\n    );\n  };\n\n  componentDidMount() {\n    this.performSearch();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.params.term !== this.props.match.params.term) {\n      this.setState(\n        state => ({\n          page: 1\n        }),\n        () => this.performSearch()\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Form />\n        {this.state.loading ? (\n          <div className=\"loader\" />\n        ) : (\n          <React.Fragment>\n            {this.state.movies.results.length === 0 ? (\n              <p>No movies found</p>\n            ) : (\n              <React.Fragment>\n                <h3>Results for \"{this.props.match.params.term}\"</h3>\n\n                <div className=\"movie-list\">\n                  {this.state.movies.results\n                    .filter(img => img.poster_path)\n                    .map(movie => {\n                      return (\n                        <Link to={`/movie/${movie.id}`} key={movie.id}>\n                          <div>\n                            <img\n                              alt={movie.original_title}\n                              src={`http://image.tmdb.org/t/p/w342/${\n                                movie.poster_path\n                              }`}\n                              className=\"movie-img\"\n                            />\n                            <p className=\"movie-title\">\n                              {movie.original_title}\n                            </p>\n                          </div>\n                        </Link>\n                      );\n                    })}\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        )}\n        <div className=\"load\">\n          {this.state.movies.page < this.state.movies.total_pages && (\n            <div className=\"load-button\" onClick={this.loadMore}>\n              Load more\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MovieResults;\n","import React from 'react';\nimport axios from 'axios';\nimport Error from './Error';\n\nimport { Link } from 'react-router-dom';\n\nclass Actor extends React.Component {\n  state = {\n    actor: undefined,\n    loading: true,\n    sortedBy: 'rating',\n    error: false\n  };\n\n  componentDidMount() {\n    const id = this.props.match.params.actorId;\n\n    axios\n      .get(\n        `https://api.themoviedb.org/3/person/${id}?api_key=b0994f6029743a2f030a3fed34413897&language=en-US&&append_to_response=movie_credits`\n      )\n      .then(res => {\n        const actor = res.data;\n        this.setState({ actor, loading: false });\n      })\n      .catch(error => {\n        console.log('error: ' + error);\n        this.setState({ error: true });\n      });\n  }\n\n  handleChange = event => {\n    this.setState({ sortedBy: event.target.value });\n  };\n\n  ellipsis = string => {\n    if (string.length > 422) return string.substring(0, 422) + '...';\n    else return string;\n  };\n\n  render() {\n    if (this.state.error) {\n      return <Error />;\n    }\n\n    return (\n      <div className=\"wrapper\">\n        {this.state.loading ? (\n          <div className=\"loader\" />\n        ) : (\n          <React.Fragment>\n            <div className=\"actor\">\n              <div className=\"actor-bio flex\">\n                <h1> {this.state.actor.name} </h1>\n                <h3> {this.state.actor.birthday} </h3>\n                {this.state.actor.biography === '' ? (\n                  <p>No bio</p>\n                ) : (\n                  <p>{this.ellipsis(this.state.actor.biography)}</p>\n                )}\n              </div>\n              <div className=\"actor-img flex\">\n                <img\n                  alt={this.state.actor.name}\n                  src={`http://image.tmdb.org/t/p/w500/${\n                    this.state.actor.profile_path\n                  }`}\n                  className=\"movie-img\"\n                />\n              </div>\n            </div>\n            <h3>Filmography</h3>\n            <div className=\"sort\">\n              <p>Sort by</p>\n              <select value={this.state.sortedBy} onChange={this.handleChange}>\n                <option value=\"rating\">Rating</option>\n                <option value=\"newest\">Newest</option>\n                <option value=\"oldest\">Oldest</option>\n              </select>\n            </div>\n\n            <div className=\"movie-list\">\n              {[...this.state.actor.movie_credits.cast]\n                .sort((a, b) => {\n                  switch (this.state.sortedBy) {\n                    case 'newest':\n                      return (\n                        new Date(b.release_date) - new Date(a.release_date)\n                      );\n                      break;\n                    case 'oldest':\n                      return (\n                        new Date(a.release_date) - new Date(b.release_date)\n                      );\n                      break;\n                    default:\n                      return b.vote_average - a.vote_average;\n                  }\n                })\n                .filter(img => img.poster_path)\n                .map(movie => {\n                  return (\n                    <Link to={`/movie/${movie.id}`} key={movie.id}>\n                      <div>\n                        <img\n                          alt={movie.original_title}\n                          src={`http://image.tmdb.org/t/p/w342/${\n                            movie.poster_path\n                          }`}\n                          className=\"movie-img\"\n                        />\n                        <p className=\"movie-title\">{movie.original_title}</p>\n                        <p className=\"movie-title\">\n                          {movie.release_date.substring(0, 4)}\n                        </p>\n                        {movie.vote_average !== 0 && (\n                          <p className=\"movie-title\">{movie.vote_average}</p>\n                        )}\n                      </div>\n                    </Link>\n                  );\n                })}\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Actor;\n","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\n\nimport Main from './Main';\nimport Movie from './Movie';\nimport MovieResults from './MovieResults';\nimport Actor from './Actor';\n\nexport default () => (\n  <HashRouter>\n    <Switch>\n      <Route path=\"/\" component={Main} exact />\n      <Route path=\"/movie/:movieId\" component={Movie} />\n      <Route path=\"/search/:term\" component={MovieResults} />\n      <Route path=\"/actor/:actorId\" component={Actor} />\n    </Switch>\n  </HashRouter>\n);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport Router from './components/Router';\n\nexport default () => <Router />;\n"],"sourceRoot":""}